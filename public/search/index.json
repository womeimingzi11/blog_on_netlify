[{"content":"\r作为一个不怎么 Skr 的 API Wrapper，最近花式的用到了高德地图的地理编码/逆编码服务，与其散乱各处每次都要反复修改 function 代码，不如干脆就封装成 package，还能方便自己和团队今后的使用。\n作为年轻人（并不）的第一个 Package，当然是参考 Hadley 的经典手册《R Package》，此外还参考了来自 Fong Chun Chan’s Blog 的 Making Your First R Package 作为快速手册。Functions 编写的过程非常的愉快，毕竟只是 url 与 reques body 的组装，在 httr, jsonlite 以及 XML2 等三个主要包的帮助下，API Wrap 只不过是体力活。目前包正在 CRAN 审核，如果上线了应该又能水一篇文章，不过没上线也应该会水一篇……记账上吧先。\n然而，与写业务代码相比，提交包到 CRAN 没想到是最痛苦的。最主要的原因之一，就是作为一个 API 调用的包，几乎所有的操作都需要调用 token：\n写 function，需要提供 key 参数（高德提供 token，官方文档称为 key，为了统一，一并称为 key，下同），这个很简单，单独赋值或者从 getOption('amap_key')中获取（此为 function 中的逻辑，非 R 缺省操作，下同）均可，无论是测试还实际业务都能轻松完成，也无需暴露 key；\r写 README，虽然不是 CRAN 强制要求的，但是作为肯定会在 GITHUB 开源的项目，README 必不可少，从 Rmarkdown 到 Markdown，因为是在本地编译，也可以从 Option 中获取，因此编译成的 Markdown 和原始 Rmarkdown 文件中均可隐去 key；\r写单元测试，这个就开始有坑了。虽然devtools::test可以通过测试，但是在devtools::check()中因为每次测试都是在独立的 NAMESPACE 中进行的，因此即便是设置了 option(var1 = value1)，在测试中的 getOption('var1') 依然返回 NULL，因此需要在测试中加入 key 的值，这就使得 token 会随着 package 的分发，对所有的用户可见；\r写 vignette，这个坑和单元测试情况相似，即便是 option 中加入了变量，依然不能保证可以正确编译，并且比较玄学的是某些情况下，可以从 option 中读取变量，但是在 R Studio 的 Build 页面中运行 check 又不可以获取，最终报错。而且即便是本地编译成功，如果不做任何额外的操作，发送到远端服务器后依然无法编译成功，原因也很简单对方的环境中毕竟没有 key 变量，因此需要在 vignette 相关部分加入 key 的值，再次会造成 key 的泄露。\r\r虽然，作为免费的 token，大概有心盗用的人也不会太多，况且 package 有人用没人用还是很难乐观的议题。然而，信息泄露总归是不好的。\n为了解决问题 3、4，花费了比写业务代码还久的时间，虽然有很大的概率不是最优，并且其实书里面有提到。但既然自己遇到了，并且 Stackoverflow 也有人提完，不如依然做个记录，万一能帮到同样没认真看书的朋友呢?\nNo vignette, No test, No Trouble?\r最先想到的方法，当然是放弃。毕竟我们平日写 function，连注释都没有，写一个不怎么样的包，怎么还要写文档了呢?自己去悟不好么?\n关于 vignette 和 test 的必要性，这里就不再做科普了，感兴趣的朋友可以参考《R Package》中的章节 Vignettes: long-form documentation 以及 Testing。然而其实书里面好像是没讲到的问题是，远程检查代码的过程中会回报一个 Warning：\n诚然，Warning ~= Can’t be better，然而在 CRAN 提交的过程中，WARNING ~= ERROR\n\rCheck results: I always state that there were no errors or warnings. Any NOTEs go in a bulleted list. For each NOTE, I include the message from R CMD check and a brief description of why I think it’s OK. If there were no NOTEs, I’d say “There were no ERRORs, WARNINGs or NOTEs —— R Package: Chapter 20.3 The submission process”\n\r虽然可以选择 Upload 到 CRAN，不过在 Review 步骤也很容易被返回。因此这种豁达的操作是行不通的。\n\rskip_on_cran() for testthat\r在 test 部分想要解决这个问题，其实可以在 test 起始部分加入 skip_on_cran() 方法（下列代码第二行）\n# Test whether getAdmin can retrun right class withou to_tibble\rtest_that(\u0026quot;Reuturn raw respone with correct location\u0026quot;, {\rskip_on_cran()\rres \u0026lt;- getAdmin(\u0026quot;四川省\u0026quot;, to_table = F)\rres_class \u0026lt;- class(res)\rexpect_equal(any(stringr::str_detect(res_class, \u0026quot;list\u0026quot;)), TRUE)\r})\r这个方法其实在 R Package: Chapter 12.5 CRAN notes 有提到：\n\rTests need to run relatively quickly - aim for under a minute. Place skip_on_cran() at the beginning of long-running tests that shouldn’t be run on CRAN - they’ll still be run locally, but not on CRAN.\n\r不过一方面是因为看书不认真，另一方面只是注意到这方法 Hadley 的意图是加快测试时间，只在本地进行测试，因此忽略了这种无法在远端进行测试的场景。\n不过添加这个方法后问题也不是全然解决，因为正如前面所说，devtools::check中的单元测试会在单独的 NAMESPACE 中进行，因此即便是在本地运行，如果不单独指定 key，检查过程依然会失败。因此我们用到了skip()family 的另外一种形式skip_if()来进行了条件判断:即只有满足 condition 的时候才会进行单元测试，在本案例中具体而言就是 option 不存在 amap_key 参数，则不进行测试：\nskip_if(is.null(getOption(\u0026quot;amap_key\u0026quot;)))\r更多 skip 方法请参考help(testthat::skip)\nno test 的 Warning 被解决，只不过因为 CRAN 会跳过测试步骤，处于保险起见，还是应该在本地进行更仔细的测试。\n\rNOT_CRAN for vignette\rNote: 这个部分，虽然解决了 Warning 警告，但实际上处理并不完美：无法在文档中预览变量，实际上只是显示了静态代码块。如果有更好的解决方案，还望不吝赐教\n在 Hadley 为 httr 编写的 vignette Managing secrets 中对于如何处理保密的数据有了很充分的讨论。\n\rVignettes pose additional challenges when an API requires authentication, because you don’t want to bundle your own credentials with the package! However, you can take advantage of the fact that the vignette is built locally, and only checked by CRAN.\n\r因为 Vignettes 是在本地进行编译的，因此我们可以指定仅仅使用 CRAN 进行检查工作（而非再次构建）。\n只要在首次调用 token 的代码块之前添加代码块设定 knitr:opts_chunk$set，通常是 vignette 文字开始之前，文档的 YAML Header 结束之后。\nNOT_CRAN \u0026lt;- identical(tolower(Sys.getenv(\u0026quot;NOT_CRAN\u0026quot;)), \u0026quot;true\u0026quot;),\rknitr::opts_chunk$set(purl = NOT_CRAN)\r之后在所有需要调用 Token 的代码块中，将 eval 设定为 eval = NOT_CRAN，之后在 CRAN 检查中 vignette 构建的步骤便不会报 ERROR。\n图中有重复赋值，已修改\n在该方法中，会对 R 运行环境进行检查，如果当前环境为 CRAN 则不运行 vignette 文档中的代码块，也正因为如此，Rmarkdown 中的代码块也就不会返回执行内容，因此文档中也不会显示结果，代码块仅做静态展示之用。\n\r错误的挣扎\r在第二张图中，可以发现在使用 NOT_CRAN 来解决 vignette 错误之前，我还常使用 source R script 的方法解决问题，当时的设想很完美：将 option(amap_key=\"My token\")写入外部文件，之后将外部文件放入 .Rbuildignore 中在 package 打包的过程中排除掉，是否就能得到完美的解决方案了呢?\n然而实际上，放入 .Rbuildignore 中的文件因为被排除在了打包之外，而构建 vignette 是完成打包之后方才进行，因此这种情况下是找不到文件地址的（因为没有在已经打包完成的library目录中）。\n通过这些方法，目前暂时实现了 0 error 0 warning，各位处理过相似问题的前辈如果有更合理的解决方案，还望能分享指点。\n欢迎通过邮箱，微博, Twitter以及知乎与我联系。也欢迎关注我的博客。如果能对我的 Github 感兴趣，就再欢迎不过啦！\n\r","date":"2020-09-25","permalink":"/post/2020-09-25-using-r-for-everything-%E7%95%AA%E5%A4%96-r-%E5%8C%85%E5%BC%80%E5%8F%91%E4%B8%AD-vignette-test-token-%E7%9A%84%E5%A4%84%E7%90%86/","tags":["R","package","vignette","token"],"title":"R for Everything 番外: R 包开发中 vignette/test token 的处理"},{"content":"TL:DR 使用 moreThanANOVA 可以自动选择适当的方法显著性检验并输出多重比较的图表（如题图）\nANOVA 不是万金油 显著性检验可以说是自然科学领域中最常见的操作，毕竟探究处理间是否有差异、区域间特征异同是后续探索以及假设的第一步。\n然而，当我们阅读文献和报告之时不难发现，单因素方差分析 ANOVA 似乎是被用来进行显著性检验的唯一方法，但凡展示显著性，如果没什么意外必然是通过 ANOVA 做出的结果。而之所以出现这种状况，除了数据确实需要 ANOVA 检验，「其他人都用这个方法」也是重要因素。然而，用的人多的方法就一定是对的方法吗？\n当然不是，使用 ANOVA 检验数据最重要的前提便是假设数据符合正态分布。\n虽然通常来说，当数据的量足够大的情况下，往往会呈现出正态分布，但当具体到某次研究中，结果却并不见得如此。当然我们还有数据转换这类操作，可以试图让各种数据尽可能的达到符合正态分布，然而就像不是所有的付出都有回报一样，也不是所有的数据转换都能达到正态期望，亦或者通过复杂的转换数据也许能够实现正态分布，然而复杂的转换本身又会令解释工作变得复杂。\n当然，即便数据分布不符合正态分布，使用 ANOVA 进行显著性检验也会得到结果，甚至是你喜欢的结果。然而使用错误的方法得到的「美好」结果依然是错误的。\n不止是 ANOVA 对于无法使用 ANOVA 进行显著性检验的数据，我们可以退而求其次选择非参数检验 non-parametric tests，其中最常见的便是秩检验 Rank test。对于只有两组/处理的数据，通常使用 Mann–Whitney U test或Wilcox test，对于有三组/处理及以上的数据可以使用 Kruskal-Wallis test.\n此外，根据组间样本数量异同还分为秩和检验 Rank Sum Test 和秩序检验 Signed Rank Test，其中的细节此处不再详述，可以参考如下文章：\n Unpaired Two-Samples Wilcoxon Test in R wilcox.test  虽然非参数检验其数据敏感度与 ANOVA 这类参数检验数据敏感度相比较低，然而正确的分析方法依然是所有讨论的前提。\n正确的流程 因此，一次正确的显著性检验的流程应当为：\n 输入数据 数据分布探索 数据转换（可选） 检验方法确定 显著性检验 多重比较  虽然这些步骤每一步使用 R 实现都并不复杂，然而当需要比较组间 N 个变量的差异时，即便采用了 map-reduce 模式处理，依然需要大量的工作，更何况如何将 R console 中打印的结果整理为可以编辑的表格以及将结果制作成可供出版的示意图，也会需要更多额外的工作。\n基于此，笔者使用 Shiny 将这套流程打包成名为 moreThanANOVA 的 Shiny App  托管于 Shinyapps.io.\nIt just works Data Viewer 在 Data Viewer 页面，通过 DT 包实现了展示输入数据的功能，当没有上传数据之时，可以通过 Data Viewer 查看 moreThanANOVA 内置的示例数据（数据本身无意义，仅供演示之用途）。\nDistribution Determine 在 Distribution Determine 页面，moreThanANOVA 会检验所有变量在不同组中的分布类型，目前仅分为 normal 和 skewed，然而对于双峰分布等其他分布类型，非参数检验也依然适用，因此之后的分析结果依然可靠。\n当同一变量在不同组中的分布类型不相同时，moreThanANOVA 会采用非参数检验进行之后的分析，同时在 Density Plot 中绘制数据分布密度图。\nComparisons 在 Comparisons 页面，首先 moreThanANOVA 会通过在前期步骤中确定的检验方法，进行组间显著性检验。同时会将均值、标准差、中位数以及四分位距 Interquartile range, IQR 输出为可下载的可交互表格。\n最后，moreThanANOVA 还会生成基于多重检验的图形，目前可以自定义图中 X/Y 轴以及题头标签，显示相关性级别、相关性的表示方法（p 或者 *）、多组图片之间的排列方式以及下载图片的宽、高。\n####为何采用 PDF 输出图形？ 使用 PDF 可以输出矢量图，能够有效避免 DPI 造成的清晰度问题，同时拥有极小的体积以及不错的兼容性。\n目前 moreThanANOVA 托管于 Rstudio 旗下 Shinyapps.io 网站，源代码托管于 GitHub。服务运行过程中不会永久保存用户数据，数据有效期仅保留至网页关闭前。\n同时如果对于数据高度敏感，也可以考虑将fork 项目 或下载至本地后，手动运行 app.R 在本地电脑执行操作。\n如有任何使用中的疑问、功能上的建议与意见，欢迎与我联系。当然也欢迎 Star 以及进行任何提交。\n","date":"2020-06-09","permalink":"/post/2020-09-09-shiny-apps-%E4%BD%BF%E7%94%A8-morethananova-%E8%BF%9B%E8%A1%8C-%E6%AD%A3%E7%A1%AE-%E7%9A%84%E6%98%BE%E8%91%97%E6%80%A7%E6%A3%80%E9%AA%8C/","tags":["R","Shiny","Analysis","ANOVA"],"title":"Shiny apps: 使用 moreThanANOVA 进行「正确」的显著性检验"},{"content":"\r何为反差分解？\r关于方差分解的数学原理，在 GUSTA ME 这篇文章 Variation partitioning 有非常清晰且容易理解的介绍。\n引用经管之家网友 lovecather668 在var中方差分解的意义 中的回答：\n\rVAR中的方差分解是分析影响内生变量的结构冲击的贡献度。例如，有好多行业产品的需求变动会对钢铁行业产品的需求变动产生影响，像建材行业、汽车行业、机械行业、家电行业。那么如果我们想要知道这4个行业的需求变化对钢铁行业的需求变化产生的影响哪个大、哪个小呢，就可以用方差分解来做。做出来的结果是用贡献率（百分比）来表示的，如假设结果是以上4个行业在某个时点上的贡献率分别为10%，12%，16%，20%（随时间的变化，这个贡献率也是在变化的），其意思是在该时点钢铁行业需求的变动，10%是建材行业的需求变动引起的，12%是汽车行业的需求变动引起的，以此类推…..\n\r在生命科学的实际应用中，可以基于 RDA 结果得出不同类型的环境因素（如何气候、土壤性质以及植物）对生物群落组成（如土壤线虫群落、微生物群落）的解释程度。\nSingh et al.(2018) 在 Scientific Report 上发表的文章《tropical forest conversion to rubber plantation affects soil micro- \u0026amp; mesofaunal community \u0026amp; diversity》中提到了一套完整的基于 RDA 的方差分解操作：\n\rWe performed a redundancy analysis (RDA) based variation partitioning analysis 57 to assess the relative effects of environmental and spatial variables on community composition. We used Hellinger transformed OTU abundance data as the response variable and two sets of explanatory variables which included environmental variables (pH, Ele, TOC, AP, GSW, SX, TN, and ST) and spatial variables (geographical co-ordinates for sampling sites), respectively. Before the RDA, the environmental variables with high variance inflation factor (VIF) \u0026gt;10 were eliminated to avoid collinearity among factors. The importance of environmental and spatial variables in explaining species composition was determined by an RDA analysis using Monte Carlo permutation tests (999 unrestricted permutations) followed by forward selection to remove the non-significant variables from each of the explanatory sets.\n\r如何进行这样的方差分解流程（包括变量筛选以及变量集的显著性标注）就是今天这篇文章的重点。\n\r使用 R 进行方差分解\r正如大多数基于群落的分析方法相同，在 R 中进行方差分解同样离不开 vegan 包，主要依赖两个功能：\nordistep - 变量筛选\rvarpart - 方差分解\r\r数据继续使用之前的文章《使用 ggplot2 可视化 RDA 结果》中使用的演示数据。\n# suppressMessages will hide message from loading package, it makes the output clearer\rlibrary(tidyverse)\r# col_types = cols() will suppress message about the column type to make the output clearer\rdf_com \u0026lt;- read_csv(\u0026#39;assets/2020-04-28-post/df_com_smp.csv\u0026#39;, col_types = cols())\rdf_env \u0026lt;- read_csv(\u0026#39;assets/2020-04-28-post/df_env_smp.csv\u0026#39;, col_types = cols())\r# Take a glimpse about the structure of data frame\rglimpse(df_com)\r## Rows: 150\r## Columns: 5\r## $ pp \u0026lt;dbl\u0026gt; 2.5500000, 1.3110456, 8.2500000, 102.4900000, 21.3500000, 2.4900...\r## $ ba \u0026lt;dbl\u0026gt; 28.010000, 7.316707, 13.255000, 18.516667, 52.720000, 4.965000, ...\r## $ fu \u0026lt;dbl\u0026gt; 2.5500000, 1.3378838, 3.3550000, 20.9466667, 14.8466667, 1.24500...\r## $ pr \u0026lt;dbl\u0026gt; 2.5500000, 1.3378838, 0.0000000, 0.0000000, 0.0000000, 0.0000000...\r## $ om \u0026lt;dbl\u0026gt; 15.280000, 5.953381, 14.850000, 23.500000, 5.623333, 2.475000, 3...\rglimpse(df_env)\r## Rows: 150\r## Columns: 13\r## $ pH \u0026lt;dbl\u0026gt; -1.63965465, 0.94291257, -1.33875709, -1.20359469, -1.17624072,...\r## $ MOI \u0026lt;dbl\u0026gt; -0.1610384, -0.5549069, -0.2762522, -0.1658411, 1.0043821, 0.54...\r## $ TN \u0026lt;dbl\u0026gt; -0.116240631, -0.791972999, 0.199881689, -0.260084650, 0.291874...\r## $ TP \u0026lt;dbl\u0026gt; -0.44892589, 0.02952209, -0.14900328, -0.45606691, -0.47748995,...\r## $ AP \u0026lt;dbl\u0026gt; 0.17966965, -0.78701735, -0.10273314, 0.09277663, 2.24338416, 0...\r## $ NH4 \u0026lt;dbl\u0026gt; 0.4471754, -0.3426843, 0.7179844, -0.1328073, 0.7924569, -0.365...\r## $ NO3 \u0026lt;dbl\u0026gt; -0.51485153, -0.41977560, -0.49221441, -0.16774892, -0.58276291...\r## $ SOC \u0026lt;dbl\u0026gt; -0.292278803, -0.697789311, 0.461059956, -0.007572046, 0.035809...\r## $ MAT \u0026lt;dbl\u0026gt; 0.84202205, -1.55196703, -0.84801694, 0.78335952, -0.28932636, ...\r## $ MAP \u0026lt;dbl\u0026gt; 0.02487222, 0.27013035, 1.21243154, -0.87351309, -0.22471654, 1...\r## $ PBM \u0026lt;dbl\u0026gt; 0.17638650, -0.02465146, 0.73829039, -0.80968336, 0.12645186, 2...\r## $ PCV \u0026lt;dbl\u0026gt; 0.426595458, 0.008333099, -0.793336422, -0.514494850, 0.1826090...\r## $ PSR \u0026lt;dbl\u0026gt; 0.22757812, -0.83529465, 0.83493399, -1.29081156, 0.98677296, 0...\r按照 varpart 在文档中的说明：\n\rThe functions partition the variation in Y into components accounted for by two to four explanatory tables and their combined effects. If Y is a multicolumn data frame or matrix, the partitioning is based on redundancy analysis (RDA, see rda), and if Y is a single variable, the partitioning is based on linear regression. If Y are dissimilarities, the decomposition is based on distance-based redundancy analysis (db-RDA, see capscale) following McArdle \u0026amp; Anderson (2001). The input dissimilarities must be compatible to the results of dist. Vegan functions vegdist, designdist, raupcrick and betadiver produce such objects, as do many other dissimilarity functions in R packages. However, symmetric square matrices are not recognized as dissimilarities but must be transformed with as.dist. Partitioning will be made to squared dissimilarities analogously to using variance with rectangular data – unless sqrt.dist = TRUE was specified.\n\r对于群落矩阵，方差分解是按照 RDA 结果来进行处理的，因此筛选变量的流程可在 RDA 分析的过程中完成。\n为何要筛选变量？\r在多因素的分析中，例如 RDA 分析和多元线性回归，任何增加新的变量，都会使得模型「看起来」拟合得更好，然而实际情况显然并非如此，为了解决过拟合问题调整 R 方是一个很常用的指标，具体的解释可以查看 Adjusted R2 / Adjusted R-Squared: What is it used for?。\n回到正题，对于 RDA 分析选择变量，ordistep 提供了三种方法 backward, forward, both，即从全模型逐渐消除变量、从零模型逐渐增加变量以及双向选择变量。这里我们同时进行三种变量选择的方式。\n# suppressMessages will hide message from loading package, it makes the output clearer\rsuppressMessages(library(vegan))\r# Create the full model\rrda_full \u0026lt;- rda(df_com~., data = df_env)\r# Create the zero model\rrda_null \u0026lt;- rda(df_com~1, data = df_env)\r# backward selection\r# trace = 0 prevent ordistep print the selection progress from outputing to the console\r# it makes the output clearer.\rrda_back \u0026lt;- ordistep(rda_full, direction = \u0026#39;backward\u0026#39;,trace = 0)\r# forward selection\rrda_frwd \u0026lt;- ordistep(rda_null, formula(rda_full), direction = \u0026#39;forward\u0026#39;,trace = 0)\r# bothward selection rda_both \u0026lt;- ordistep(rda_null, formula(rda_full), direction = \u0026#39;both\u0026#39;,trace = 0)\rrda_back\r## Call: rda(formula = df_com ~ pH + MOI + TN + TP + NO3 + SOC + MAT, data\r## = df_env)\r## ## Inertia Proportion Rank\r## Total 2031.7341 1.0000 ## Constrained 860.1782 0.4234 5\r## Unconstrained 1171.5559 0.5766 5\r## Inertia is variance ## ## Eigenvalues for constrained axes:\r## RDA1 RDA2 RDA3 RDA4 RDA5 ## 747.1 77.3 32.2 2.5 1.0 ## ## Eigenvalues for unconstrained axes:\r## PC1 PC2 PC3 PC4 PC5 ## 755.6 247.3 108.6 46.6 13.5\rrda_frwd\r## Call: rda(formula = df_com ~ MOI + NO3 + TN + SOC, data = df_env)\r## ## Inertia Proportion Rank\r## Total 2031.7341 1.0000 ## Constrained 790.2092 0.3889 4\r## Unconstrained 1241.5248 0.6111 5\r## Inertia is variance ## ## Eigenvalues for constrained axes:\r## RDA1 RDA2 RDA3 RDA4 ## 714.8 70.1 4.3 1.0 ## ## Eigenvalues for unconstrained axes:\r## PC1 PC2 PC3 PC4 PC5 ## 787.6 277.0 114.1 48.7 14.0\rrda_both\r## Call: rda(formula = df_com ~ MOI + NO3 + TN + SOC, data = df_env)\r## ## Inertia Proportion Rank\r## Total 2031.7341 1.0000 ## Constrained 790.2092 0.3889 4\r## Unconstrained 1241.5248 0.6111 5\r## Inertia is variance ## ## Eigenvalues for constrained axes:\r## RDA1 RDA2 RDA3 RDA4 ## 714.8 70.1 4.3 1.0 ## ## Eigenvalues for unconstrained axes:\r## PC1 PC2 PC3 PC4 PC5 ## 787.6 277.0 114.1 48.7 14.0\r根据实际情况选择最终的模型，这里我们选择向后消除法选择的模型作为 RDA 最终的结果。同时这也是方差分解的最终模型，即 df_com ~ pH + MOI + TN + TP + NO3 + SOC + MAT，其中 MAT 是气候因素，我们将其选入气候因素集 df_clim， 其余均为土壤性质因素集 df_soil，植物因素没有选入模型。\n# Divide the environmental data.frame by different categories.\rdf_clim \u0026lt;- df_env %\u0026gt;% select(MAT)\rdf_soil \u0026lt;- df_env %\u0026gt;% select(pH,MOI,TN,TP,NO3,SOC)\r# Perform variation partitioning analysis, the first variable is the community matrix\r# the second and third variables are climate variable set and soil property variable set\rvpt \u0026lt;- varpart(df_com, df_clim, df_soil)\rvpt\rplot(\rvpt,\rbg = 2:5,\rid.size = 1.1,\rcex = 1.2,\rXnames = c(\u0026#39;Climate\u0026#39;, \u0026#39;Soil properties\u0026#39;)\r)\rtitle(\u0026#39;Variation partitioning by varpart from vegan\u0026#39;)\r根据 RDA 和方差分解的结果（实际上是相同的结果），我们可以发现气候因素与土壤性质共同解释了 39.5% 的群落结构变异，其中土壤性质解释了 38.8% 的群落组成变异，气候解释了 0.2% 的群落组成变异。然而对于二者是否显著，还需要进一步检验。\n# Define formula of soil property set and climate set to test.\r# Set the variable from other category as condition\rformula_soil \u0026lt;- formula(df_com ~ pH+MOI+TN+TP+NO3+SOC + Condition(MAT))\rformula_clim \u0026lt;- formula(df_com ~ Condition(pH)+Condition(MOI)+Condition(TN)+Condition(TP)+Condition(NO3)+Condition(SOC) + MAT)\ranova(rda(formula_soil, data = df_env))\r## Permutation test for rda under reduced model\r## Permutation: free\r## Number of permutations: 999\r## ## Model: rda(formula = df_com ~ pH + MOI + TN + TP + NO3 + SOC + Condition(MAT), data = df_env)\r## Df Variance F Pr(\u0026gt;F) ## Model 6 842.8 17.025 0.001 ***\r## Residual 142 1171.6 ## ---\r## Signif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1\ranova(rda(formula_clim, data = df_env))\r## Permutation test for rda under reduced model\r## Permutation: free\r## Number of permutations: 999\r## ## Model: rda(formula = df_com ~ Condition(pH) + Condition(MOI) + Condition(TN) + Condition(TP) + Condition(NO3) + Condition(SOC) + MAT, data = df_env)\r## Df Variance F Pr(\u0026gt;F) ## Model 1 21.82 2.6443 0.066 .\r## Residual 142 1171.56 ## ---\r## Signif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1\r结合单因素方差分析 ANOVA 得到的结果，我们可以得出最终结论，土壤性质能够显著解释 38.8% 的群落组成变异，气候因素对于群落结构变异的解释不显著。\n\r\r","date":"2020-05-11","permalink":"/post/%E6%96%B9%E5%B7%AE%E5%88%86%E8%A7%A3%E5%8F%98%E9%87%8F%E7%AD%9B%E9%80%89%E4%B8%8E%E6%98%BE%E8%91%97%E6%80%A7%E6%A0%87%E6%B3%A8/","tags":["Analysis","R","方差分解","Variation partition"],"title":"R for everything: 方差分解（Variation partition）变量筛选与显著性标注"},{"content":"\r\r\r\r\r\r关于 RDA（Redundancy analysis 冗余分析）是什么，相信对于已经有可视化需求的同学来说已经不用更多的解释了。\n在 R 中常用来进行 RDA 分析和绘制工作的是 vegan 和 ggvegan 这两个包。然而，在实际使用中，最常遇到的问题是虽然这些包内建的 plot 等功能可以绘制出基本可用的包，但想要进一步的定制图形却没那么容易。\n想要绘制出一副自己满意、编辑满意、导师满意最主要的是审稿人满意的 RDA 结果，作为最强可视化工具之一的 ggplot2 包毋庸置疑是最佳的选择。\n我们需要什么样的 RDA 图\r首先，我们来思考我们需要什么样的 RDA 图？按照世纪需求以及审稿人的建议：\n\rI would recommend showing in bold the variables with significant correlations\n\r笔者最后的目标是绘制一幅：\n1. 显示物种信息（实际上是响应变量矩阵）；\r2. 环境变量（实际上是解释变量矩阵）；\r3. 在两轴上能显示各自的解释度；\r4. 标记有显著性的解释变量。\r以笔者对 plot.rda 以及 autoplot.rda 这两个 vegan 和 ggvegan 内建函数的浅薄了解，似乎很难完成。\n如何「标记有显著性的解释变量」？\r如果进行过 RDA 分析不难发现，使用 vegan 内建的 rda 是没有标记解释变量的显著性的。其实这种显著性需要 vegan 内建的 envfit 函数来得到一个及其近似的结果。通常这个方法在论文中会写作：\n\rMonte Carlo permutation (999 permutations) was used to identify axes with significant eigenvalues and species-environment correlations.\n\r由于是进行了 999 次（默认参数可以修改）的蒙特卡洛抽样，因此这个结果是及其近似的结果，直接用作 RDA 中解释变量的显著性是没有问题的。然而，envfit 输出的结果并非标准的 data.frame 或者类似的结果，无法方便的输出或者进行分析，后续我们还会进行结果提取的步骤，暂且按下不表。\n\r\rRDA 和 ENVFIT 分析\r此例，我们使用随机抽取的 150 条土壤线虫群落群落数据以及对应的环境数据，由于不影响后续的理解以及版权考量，对各参数名不再解释。\n每一步的操作以及原因以注释的形式呈现。\nlibrary(\u0026#39;vegan\u0026#39;)\rlibrary(\u0026#39;tidyverse\u0026#39;)\r# read Environmental Variables\rdf_env \u0026lt;- read_csv(\u0026#39;assets/2020-04-28-post/df_env_smp.csv\u0026#39;)\r# read Community composition matrix\rdf_com \u0026lt;- read_csv(\u0026#39;assets/2020-04-28-post/df_com_smp.csv\u0026#39;)\r# View the structure of data\rDT::datatable(df_env)\r\r{\"x\":{\"filter\":\"none\",\"datacontainer\":\"\\n \\n \\n  \\n pH\\n MOI\\n TN\\n TP\\n AP\\n NH4\\n NO3\\n SOC\\n MAT\\n MAP\\n PBM\\n PCV\\n PSR\\n \\n \\n\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6,7,8,9,10,11,12,13]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}\rDT::datatable(df_com)\r\r{\"x\":{\"filter\":\"none\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\"],[2.55,1.31104556,8.25,102.490000004,21.349999996,2.49,24.10410513,15.510634807,1.365,3.180661576,42.147355717,22.320941351,8.99,14.932020616,11.383061027,0.75024383,12.225269798,18.981280763,4.285,25.7225,23.407709783,3.46860909,13.41906686,4.9125,15.785,47.51,25.289292974,22.038068996,4.022447384,1.850481125,3.30565154,37.59398495,42.563296066,16.185,1.730702667,17.763980153,13.35,10.64,1.81554103,9.98,4.006506097,6.279181547,9,7.400366613,6.946666667,28.53193781,1.07561579,14.575415324,14.249034797,1.565312674,5.738184654,14.093510247,3.715470484,10.332350345,88.285,0.806907123,10.21599746,20.91,6.13,8.908365965,5.1296339,8.627898953,73.035,20.063333333,5.28,12.901305156,0.82,15.1451492,2.765,29.580700276,4.05,18.06222258,74.655,2.95420975,5.926062151,117.638913467,37.04389965,4.443333333,29.161198944,9.023446079,5.386613211,10.59,13.698321,19.049868111,7.949471973,3.57777561,52.39,5.689504733,28.83,15.200352267,4.430000001,11.433320892,1.392951663,52.95,14.418048253,3.521337629,29.913027293,21.898671675,3.69205055,20.701683385,6.464297565,3.754123149,26.22,4.015,1.525,7.444129727,4.10531764,4.64035578,43.885,8.352151627,17.101053653,16.536717289,2.93169159,4.28,6.45,5.023304863,1.235788435,1.32380196,4.597701146,22.34666667,53.27,19.63093834,2.3304591,3.17,1.285,2.321736883,2.530920883,6.23304523,5.045,9.744118103,14.945,16.307377499,42.51853974,14.231848133,4.1300073,13.957039532,28.380000003,2.13401622,5.731731166,8.787426674,3.676470584,22.09,3.378062947,5.055,5.938676435,0.824266403,27.3040716,4.21674393,3.64,23.174102286],[28.01,7.316707067,13.255,18.516666667,52.720000003,4.965,61.159518149,104.318667023,29.525,6.391601086,132.76722201,53.101576795,68.93,15.41218032,51.621184559,4.60789695,6.320252723,14.58442281,2.025,70.133333335,55.615344965,22.890129924,16.531416733,17.5925,84.6116666665,35.78,88.71119275,73.675164213,6.742292468,1.850481126,15.06052317,100.2506265,28.927071339,60.28,11.780936114,75.030093826,7.42,13.395,16.018057106,9.905,16.239162018,2.73933461,9,31.452368767,52.890000003,56.886832074,5.07978943,44.109960097,43.228220524,3.126227364,17.409535419,24.106736216,7.685163738,8.235034911,24.41,6.075381653,44.268746175,43.425,5.99,57.97318627,5.24033065,24.859872166,39.235,18.313333334,26.885,22.102488219,0,97.45131634,10.815,96.372614884,14.27,58.268653779,18.18,1.77957281,14.303639894,101.418313454,119.31534497,1.833333333,99.531542101,18.603584759,2.330908984,2.02,67.215835937,36.546058651,11.896769489,8.107482045,16.896666666,6.885763172,57.93,15.607637564,24.3,60.948767997,4.069253017,24.695,26.19422356,1.753134836,10.801755933,43.566043816,1.48499579,70.413058423,3.564595357,3.754123147,30.6783333335,22.96,15.255,26.548681848,0,6.214167549,16.315,1.17082309,66.523299935,14.606661515,20.712568085,8.555,46.435,27.316589099,13.539917425,1.32380196,46.201612299,15.933333329,33.575,19.63093835,3.86720199,3.17,6.34,2.284156607,17.935821313,10.813197895,8.22,14.560055917,38.455,17.676629346,106.940895354,110.354272344,16.520029201,37.587282122,67.925,51.263182386,5.207281986,8.645149934,13.384345021,12.82,11.726477653,12.83,8.15606021,0.824266403,44.431675277,18.990888477,1.215,23.359577636],[2.55,1.33788375,3.355,20.946666666,14.846666667,1.245,20.3783611,49.41237375,11.89,3.210939506,51.913235867,14.824183506,32.96,12.362447521,6.449095454,0.75024383,8.52156608,6.229061783,0,15.7875000005,27.296181727,6.54118671,4.176605367,1.5275,25.615,22.3275,39.584972627,20.080018553,3.038001627,3.71267852,7.484140697,0,31.561450774,11.8675,2.270663033,32.693592903,7.265,6.57,5.26798363,5.95,5.18373016,1.794512237,6.803333333,8.659201603,16.343333334,30.174783223,3.22684737,27.85889319,36.553722713,3.91219848,4.573193167,17.28865033,4.596599861,14.44986781,10.215,6.185454593,21.02443624,5.225,0,56.08139661,0.95950873,9.866041093,46.93,3.17,7.365,2.944640753,2.18938088,18.2851574,2.765,34.051264247,6.075,34.956655987,20.96,1.85256614,6.318288817,79.11498821,55.227138353,10.3,42.777826077,5.068591873,0,2.02,24.27693397,8.786437327,2.176223296,8.31376294,33.590000003,2.284669866,13.005,13.214162717,2.215,5.690404493,0,38.845,20.22592903,0,11.532330826,21.607522156,6.656883553,26.90954786,3.585855631,2.96572832,7.985,11.795,4.71,12.403087846,1.259763165,7.703933116,16.4,7.390614394,22.389153523,14.987918239,4.691170784,7.28,12.295,8.091162867,2.47157687,1.283697045,0,7.436666667,14.04,0,0,1.56,6.21,8.48589191,10.243746336,6.10687025,4.76,9.148521367,14.14,7.870997773,54.827970416,27.16275497,9.572006195,8.184924529,24.33,8.750615126,7.781594613,3.08948158,8.520325846,10.013333333,8.45315523,3.79,5.938676435,0.824266403,30.981702044,14.34596824,2.43,32.008396093],[2.55,1.33788375,0,0,0,0,4.227436067,3.705822493,0,0.795165393,11.049746943,8.108886191,0,2.593360997,3.224547727,0,0,0,0,0.4883333335,6.485519534,1.058201057,2.532928063,0,1.075,0,50.502003197,5.534499197,0,0,1.606704887,18.79699245,4.60090039,0,3.778204713,2.026342453,0,0,3.4524426,0,0,0,0,1.02848915,1.166666667,6.935359423,0,1.56928007,2.917811903,0,0.606281073,0,0,2.097315435,4.455,0,8.683844893,0,0,3.583102845,0.95950873,0,0,4.266666668,0,0,0,14.8809524,0,9.39378375,0,7.68441755,0,0,0,38.5437066,10.942905584,2.203333333,3.344957663,3.022974607,0,4.035,17.503472334,6.04128412,0,1.15821172,1.873333333,1.142334933,0,0,0,0,0,7.06,16.310224616,0.892697733,1.71556013,16.330966553,0,7.4943886,0,0,0,0,0,0.854481757,0,1.573811773,0,0,9.242517586,1.167542323,1.759479193,0,0,2.635046113,1.235788435,1.32380196,0,0.936666667,2.775,0,0,1.56,0,0,0.850557113,0,0,2.023267577,0,1.88005264,7.545744687,6.859872686,0,3.81338766,0,1.281558373,1.46810541,0.821018063,3.055721564,0,0,0,0,0.82487833,3.106554834,2.853417413,0,2.361133043],[15.28,5.9533814,14.85,23.5,5.623333334,2.475,31.283029244,31.021269615,4.455,4.0061049,45.497266223,22.661454674,35.96,1.767306684,22.726200737,3.953862653,4.928785717,5.300938244,0,12.0616666665,41.401525306,5.482985657,21.0722587,0,13.045,14.085,42.168951957,26.189131621,4.773400957,1.850481125,9.974757648,205.383861,27.874103046,9.7375,4.541326066,26.614565586,2.97,6.57,12.717327473,5.985,5.713552841,0.944822373,5.233333333,6.21995044,33.883333334,23.786239681,1.94931774,21.312262713,20.058677699,3.130083747,11.212480514,19.936423073,3.070190357,6.137719475,53.895,2.345132009,19.001063014,5.38,1.95,23.33955962,9.410455825,16.21783846,10.42,11.573333334,10.72,14.607827197,3.8844822,64.35614257,8.295,42.072418067,0,24.271707144,14.765,4.733782559,3.530310404,166.32049536,26.82432861,10.683333333,19.862152126,10.061405145,3.798260107,2.02,56.65196636,23.819497861,11.394803553,4.632846885,20.676666667,6.87098322,32.985,8.593270894,8.785,28.504534375,2.72044403,42.315,26.205091669,3.521337626,30.913223216,33.644231202,0,16.910776626,4.39084363,2.295333943,2.815,2.635,4.71,6.891025673,8.818342145,10.895063082,21.81,2.36771118,45.46654995,5.933274004,7.173358187,7.28,3.075,9.13942162,3.7073653,9.106194065,21.668703167,12.146666666,22.42,11.77856301,0,3.22,3.765,0,7.613513113,1.65289256,8.225,8.955664802,0,3.869141726,33.918621846,69.24860501,5.441998905,16.69168021,19.26,12.166189743,10.407768873,1.535405833,14.094907097,16.169999999,27.9305753,2.525,1.93199382,2.467734903,25.69710376,6.89551375,2.025,17.571677292]],\"container\":\"\\n \\n \\n  \\n pp\\n ba\\n fu\\n pr\\n om\\n \\n \\n\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}\rlibrary(\u0026#39;vegan\u0026#39;)\r# Performing RDA and viewing the results\rres_rda \u0026lt;- rda(df_com, df_env)\rres_rda\r## Call: rda(X = df_com, Y = df_env)\r## ## Inertia Proportion Rank\r## Total 2031.7341 1.0000 ## Constrained 895.7317 0.4409 5\r## Unconstrained 1136.0024 0.5591 5\r## Inertia is variance ## ## Eigenvalues for constrained axes:\r## RDA1 RDA2 RDA3 RDA4 RDA5 ## 754.0 88.3 45.4 6.2 1.8 ## ## Eigenvalues for unconstrained axes:\r## PC1 PC2 PC3 PC4 PC5 ## 747.4 235.0 96.3 44.7 12.6\r# Performing ENVFIT\rres_envfit \u0026lt;- envfit(df_com, df_env)\r# However, the result of ENVFIT is not in the data.frame format, we should extract useful information from it.\rres_envfit\r## ## ***VECTORS\r## ## pp ba r2 Pr(\u0026gt;r) ## pH -0.94935 0.31421 0.0809 0.003 ** ## MOI 0.79143 0.61126 0.2636 0.001 ***\r## TN 0.91399 0.40574 0.0887 0.005 ** ## TP 0.86358 -0.50421 0.0002 0.984 ## AP 0.99269 0.12071 0.0575 0.017 * ## NH4 0.94495 -0.32722 0.0462 0.036 * ## NO3 0.52786 0.84933 0.1430 0.003 ** ## SOC 0.81629 0.57764 0.1440 0.001 ***\r## MAT 0.10537 -0.99443 0.0118 0.405 ## MAP -0.18615 -0.98252 0.0073 0.611 ## PBM 0.75360 0.65733 0.0096 0.471 ## PCV 0.57508 0.81810 0.0380 0.051 . ## PSR 0.88521 -0.46519 0.0062 0.643 ## ---\r## Signif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1\r## Permutation: free\r## Number of permutations: 999\r正如我们在注释提到的，ENVFIT 并不是以 data.frame 的形式提供数据，因此我们还需要通过一些提取的操作才能获得与结果相同的表格。由于这类操作经常使用，因此我们将其包装成 function 并命名为 envfit_to_df。\n# Here, env_obj indicates the result of envfit. In this case, it\u0026#39;s the res_envfit.\r# r2_dig is the significant figure of R2\r# p_dig is the significant figure of p value\renvfit_to_df \u0026lt;- function(env_obj,\rr2_dig = 6,\rp_dig = 3) {\rr2_fmt \u0026lt;- as.character(paste(\u0026#39;%.\u0026#39;, r2_dig, \u0026#39;f\u0026#39;, sep = \u0026#39;\u0026#39;))\rp_fmt \u0026lt;- as.character(paste(\u0026#39;%.\u0026#39;, p_dig, \u0026#39;f\u0026#39;, sep = \u0026#39;\u0026#39;))\rtibble(\r# the name of explainary variables\rfactor = names(env_obj$vectors$r),\r# list or vector of R2\rr2 = env_obj$vectors$r,\r# list or vector of p values\rpvals = env_obj$vectors$pvals\r) %\u0026gt;%\r# generate significant levels by p values\rmutate(sig = case_when(\rpvals \u0026lt;= 0.001 ~ \u0026#39;***\u0026#39;,\rpvals \u0026lt;= 0.01 ~ \u0026#39;**\u0026#39;,\rpvals \u0026lt;= 0.05 ~ \u0026#39;*\u0026#39;,\rTRUE ~ \u0026#39; \u0026#39;\r)) %\u0026gt;%\r# format the significant figure by format definition before.\rmutate(pvals = sprintf(\u0026#39;%.3f\u0026#39;, pvals),\rr2 = sprintf(r2_fmt, r2))\r}\r# Convert result of ENVFIT to data.frame, in fact, it\u0026#39;s a tibble.\rdf_env \u0026lt;- envfit_to_df(res_envfit, r2_dig = 3)\rDT::datatable(df_env)\r\r{\"x\":{\"filter\":\"none\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\"],[\"pH\",\"MOI\",\"TN\",\"TP\",\"AP\",\"NH4\",\"NO3\",\"SOC\",\"MAT\",\"MAP\",\"PBM\",\"PCV\",\"PSR\"],[\"0.081\",\"0.264\",\"0.089\",\"0.000\",\"0.058\",\"0.046\",\"0.143\",\"0.144\",\"0.012\",\"0.007\",\"0.010\",\"0.038\",\"0.006\"],[\"0.003\",\"0.001\",\"0.005\",\"0.984\",\"0.017\",\"0.036\",\"0.003\",\"0.001\",\"0.405\",\"0.611\",\"0.471\",\"0.051\",\"0.643\"],[\"**\",\"***\",\"**\",\" \",\"*\",\"*\",\"**\",\"***\",\" \",\" \",\" \",\" \",\" \"]],\"container\":\"\\n \\n \\n  \\n factor\\n r2\\n pvals\\n sig\\n \\n \\n\",\"options\":{\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"columnDefs\":[{\"orderable\":false,\"targets\":0}]}},\"evals\":[],\"jsHooks\":[]}\r截止到目前，我们已经准备完成了 RDA 分析以及 ENVFIT 分析，并将数据转换成为了满足可视化需求的格式。\r## 结果可视化\r接下来就是需要进行可视化作业。此例，笔者仅需要显示环境变量与物种信息，不需要显示样地信息，因此绘制中仅保留了所需的信息，如需显示样地信息，请按实际需求更改。\n绘制 RDA 图形是常用的操作，因此同样将它包装成为 function 并命名为 ggRDA\n# Here, rda_obj means the object which is from vegan::rda\r# sp_size means the text size of species\r# arrow_txt_size means the environmet variable names at the end of the arrow\r# Because not every RDA plot needs indicate significant correlations, the envfit_df is optional here.\rggRDA \u0026lt;- function(rda_obj,sp_size = 4,arrow_txt_size = 4, envfit_df) {\r# ggplot doesn\u0026#39;t support rda object directly, we use ggvegan::fortify function to convert the rda to data.frame\rfmod \u0026lt;- fortify(rda_obj)\r# to get the arrow of biplot, we plot rda by vegan::plot.rda function firstly. # The arrow attributes contain in the attributes(plot_obejct$biplot)$arrow.mul\rbasplot \u0026lt;- plot(rda_obj)\rmult \u0026lt;- attributes(basplot$biplot)$arrow.mul\r# To check if envfit_df exists or not\r# If envfit_df exists, join the fortified rda_obj and envfit to mark which variable is significant.\rif(missingArg(envfit_df)){\rbplt_df \u0026lt;- filter(fmod, Score == \u0026quot;biplot\u0026quot;) %\u0026gt;%\r# If there is no requirement to mark significant variable\r# use the sytle of sinificant (black bolder solid arrow)\r# to paint the arrow\rmutate(bold = \u0026#39;sig\u0026#39;)\r} else {\rbplt_df \u0026lt;- filter(fmod, Score == \u0026quot;biplot\u0026quot;) %\u0026gt;%\rleft_join(envfit_df, by = c(\u0026#39;Label\u0026#39; = \u0026#39;factor\u0026#39;)) %\u0026gt;%\r# To mark the significant variables as sig, not significant variables as ns\r# these information are stored in bold column\rmutate(bold = ifelse(str_detect(sig, fixed(\u0026#39;*\u0026#39;)), \u0026#39;sig\u0026#39;, \u0026#39;ns\u0026#39;))\r}\rggplot(fmod, aes(x = RDA1, y = RDA2)) +\rcoord_fixed() +\rgeom_segment(data = bplt_df,\r# mult and RDA1/RDA2 are from fortified RDA data.frame\r# they contain the direction and effects of every variabl\r# their products are the direction and length of arrows\raes(x = 0, xend = mult * RDA1,\ry = 0, yend = mult * RDA2,\r# Use different arrow size to indicate the significant level\rsize = bold,\r# Use different arrow color to indicate the significant level\rcolor = bold,\r# Use different arrow linetype to indicate the significant level\rlinetype = bold),\r#############################\r# Q:Why use three different attibution to control the significant levels?\r# It is redundancy, isn\u0026#39;t it?\r# A: In fact, it\u0026#39;s not easy to recongize the significant level by one kind attribution\r# Becasue it is not delicate to indicate it with supper bold and supper thin arrow,\r# by the same logic, high contrast colors are not delicate neither.\r# As for the line type, some arrow are really short, it\u0026#39;s not easy to recognize\r# weather it is solid or dashed line at all.\r# To sum up, we use three different attributions\r# to indicate the same difference to avoid any misleading.\r#############################\r# to control the size of the header of arrow\rarrow = arrow(length = unit(0.25, \u0026quot;cm\u0026quot;)), ) +\r# Add the text of variable name at the end of arrow\rgeom_text(data = subset(fmod, Score == \u0026quot;biplot\u0026quot;),\raes(x = (mult + mult/10) * RDA1,\r#we add 10% to the text to push it slightly out from arrows\ry = (mult + mult/10) * RDA2,\rlabel = Label),\rsize = arrow_txt_size,\r#otherwise you could use hjust and vjust. I prefer this option\rhjust = 0.5) +\r# Add the text of species\rgeom_text(\rdata = subset(fmod, Score == \u0026quot;species\u0026quot;),\raes(colour = \u0026quot;species\u0026quot;,label = Label),\rsize = sp_size\r)\r}\r虽然使用 ggRDA 可以直接绘制图形，但通常为了美观，对于特定的参数还需要进一步的调整。\n注意，由于在 ggRDA 中使用了 vegan::plot.rda 绘制图像，所以在下面的调用 ggRDA 会首先绘制一次简易的 rda 图像之后，再显示出 ggplot2 绘制的图形，不影响后续的输出保存。\nlibrary(ggvegan)\r# Get the amount of explanation by each axis\r# gernerally, we choose the first two axes.\rexp_by_x \u0026lt;- (as.list(res_rda$CCA$eig)$RDA1)/(res_rda$tot.chi) * 100\rexp_by_y \u0026lt;- (as.list(res_rda$CCA$eig)$RDA2)/(res_rda$tot.chi) * 100\rggRDA(res_rda, envfit_df = df_env, sp_size = 5) +\r# Generally theme_classic is a good choice to paint a figure\rtheme_classic() +\r# In general, we don\u0026#39;t need to show the legend in RDA figure\rtheme(legend.position = \u0026quot;none\u0026quot;) +\rxlab(paste(\u0026#39;RDA1 (\u0026#39;, round(exp_by_x, 2), \u0026#39;%)\u0026#39;, sep = \u0026#39;\u0026#39;)) +\rylab(paste(\u0026#39;RDA2 (\u0026#39;, round(exp_by_y, 2), \u0026#39;%)\u0026#39;, sep = \u0026#39;\u0026#39;)) +\r# scale_XXXXX_manual series provide the ability\r# to define the style of legend by variable value\rscale_size_manual(values = c(\u0026#39;ns\u0026#39; = .6,\r\u0026#39;sig\u0026#39; = .8)) +\r# Q: What\u0026#39;s species here? I don\u0026#39;t remember their is a significant level which is called \u0026#39;species\u0026#39;\r# A: Indeed, their is no significant \u0026#39;species\u0026#39;. However, # the species name in RDA which is generated from geom_text contains colour attribution.\rscale_colour_manual(values = c(\r\u0026#39;ns\u0026#39; = \u0026#39;#606060\u0026#39;,\r\u0026#39;sig\u0026#39; = \u0026#39;black\u0026#39;,\r\u0026#39;species\u0026#39; = \u0026#39;red\u0026#39;\r)) +\rscale_linetype_manual(values = c(\u0026#39;ns\u0026#39; = 8, \u0026#39;sig\u0026#39; = 1))\r最后很简单了，使用 ggsave 将 RDA 图保存成你需要的格式就可以。\nTips: 自然科学期刊的投稿系统通常支持上传 PDF 格式的图片，根据实际情况也推荐使用 ggsave 输出 PDF 格式。\n此时无需设置 DPI 也无法设置 DPI，这是因为，ggsave 保存的 PDF 文件会优先将图片输出为矢量图，简而言之就是图片无论如何放大，都不会变得模糊，而期刊的排版系统也能很好的处理这种矢量图。\n只要给 PDF 图片设定一个合适的宽高，就无需担心图片会变得不清晰等奇奇怪怪看似玄学的问题了。\n不过如果有修改字体的需求，也许 PDF 会报错，类似于字体无法嵌入，此时输出的 PDF 文件所有的文字都会消失。关于解决这个问题，后续也许会进行进一步的讨论。\nggsave(\u0026#39;RDA.pdf\u0026#39;,width = 7)\r\r","date":"2020-04-28","permalink":"/post/2020-04-28-ggplot2-%E5%8F%AF%E8%A7%86%E5%8C%96-rda-%E7%BB%93%E6%9E%9C/","tags":["R","Analysis","ecology"],"title":"R for Everything: ggplot2 可视化 RDA 结果"},{"content":"最近微电脑添置了一块机械硬盘，毕竟在 SSD 价格飞涨的这个时期里，原本计划一步到位 1T NVME 的计划被腰斩至 512 GB。虽然日常的使用中不会遇到任何问题，但是想要保存一些资料依然有捉襟见肘的局促感。\n然而当硬盘安装停当，需要设定盘符之时，却发现盘符编号已经被占用了。原本电脑中的 NVME 硬盘仅一个分区 C 盘，按照预想机械硬盘应该紧接着设定为 D 盘。然而设定菜单中新盘符却只能 E 盘起跳，这说明有一个设备占用了 D 盘。\n然而实际情况是电脑除了一块 NVME 硬盘并没有其他的存储设备。查看设备管理器的磁盘把驱动器组。发现除了 NVME 硬盘（HS-SSD-C2000pro 512G 具体产品是海康 C2000 Pro）、机械硬盘 （HGST XXXX 日立企业硬盘）、Hyper-V 虚拟硬盘（Microsoft 虚拟磁盘，这个与本次的讨论无关）之外，还有一个名为 MVSI Card Reader USB Device driver 的设备。\n按照设备的名字，大概是一款 USB 读卡器。然而我的机箱本身(TT 启航者 F1 静音版)并没有读卡器，况且我也没有接入其他的 USB 读卡器，莫非是鼠标键盘又抽风了——毕竟曾经遇到过 USB 键鼠插入电脑后无法引导设备的奇葩故障。\n不过在尝试插拔键鼠之前，还是决定先把这个 MVSI Card Reader USB Device driver 搜一搜看看是个什么东西。不幸的是搜到的有效结果并不是非常丰富。\n虽然第一个条目似乎是设备的驱动下载，但是点进去就有一股浓浓的不能解决问题的感觉。简介基本上是模式化的内容，并没有设备本身相关的内容。截图也是与文无关的样子，虽然提供了驱动程序下载的链接，但是我并不需要下载驱动呀，Windows 已经帮我装好驱动了，故此先将设备放在一边。\n第二个搜索条目……日语的？先不看了……\n第三个搜索条目，欸，JBL Pebbles？虽然页面内并没有出现任何 MVSI 字样，但是巧合的是，我的电脑上也接入了一台 JBL Pebbles USB 音箱。\n此时再扫一眼第二条搜索条目，似乎说到了 uaudio0 字样？虽然对于设备 unix 下的访问名称不熟悉——其实插到我的 MBP 下就能查看了，但是谁让我懒呢——不过 audio 大概是音频设备的相关的吧。耐着性子看作者的 Tweet，似乎在说自己的 JBL Pebbles 插入电脑后也会有一个 Removable SCSI 设备，名字也是 MVSI Card Reader USB Device driver。\n考虑到巧合不会同时出现两次（无来源，我现编的），果断拔下 JBL Pebbles，设备管理器中的 MVSI Card Reader USB Device driver 设备消失，在磁盘管理器中也能将机械硬盘设置成为 D 盘了，done！\n事后回想起来，猜测是因为采用 USB 连接电脑的 JBL Pebbles 音箱会采用 USB DAC 的方式来实现工作。但巧合的是这台 USB DAC 还预留了读卡器的接口，虽然 JBL Pebbles 并没有读卡的功能。\n不过虽然盘符的问题已经解决了，但是其实还有一个小瑕疵，那就是 Windows Traybar 里面会一直有一个快速移除设备的图标，并且总有一个省略号设备，且无法点击。\n解决方法也很简单，只要从设备管理器中选中 MVSI Card Reader USB Device driver 然后将其禁用即可。目前没有发现副作用。\n","date":"2020-03-23","permalink":"/post/2020-03-23-%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86%E5%99%A8%E4%B8%AD%E7%9A%84-mvsi-card-reader-usb-device-driver-%E6%98%AF%E4%BB%80%E4%B9%88-%E5%A6%82%E4%BD%95%E7%A7%BB%E9%99%A4%E5%85%B6%E5%8D%A0%E7%94%A8%E7%9B%98%E7%AC%A6/","tags":["Windows驱动","硬件","驱动"],"title":"设备管理器中的 MVSI Card Reader USB Device driver 是什么？如何移除其占用盘符？"},{"content":"Han (chenhan28@gmail.com) 在最近刚刚完成的一篇 SCI 文章中，为了描述实验的采样范围，通过 ggplot2 包 (Wickham et al. 2019) 将一组 RasterLayer 绘制成为了青藏高原的地形图。考虑到使用 R 绘制地图的中文内容较少，我们进行一次回顾。\nPS 因为不是地理方面的文章/专业，所以在专业性方面有欠缺，但对于自然科学类文章中进行展示基本上是足够了。\n为什么用 ggplot2 画地图？ 因为我能！（摊手\n实际上原因如下：\n  ggplot2 是非常强大的绘图工具，配合上 ggplot2 的衍生包，这套工具链基本能满足生态学领域几乎所有的绘图需求。\n  如果对 Photoshop 这类图像处理软件熟悉，就会发现使用 ggplot2 画图，逻辑上和 PS 是非常相似的，便于快速上手和修改生成的图像——天知道把英文图改成中文图有多烦人\n  此外相比于 ArcGIS 这类软件 R 这类跨平台软件几乎可以在任何环境下完成绘图任务，甚至可以在家中的机顶盒安装 R，只不过慢到天长地久而已。\n  免费免费免费\n  在开始之前，先来看看最终的展示效果。为了避免文章版权和数据共享问题，地图上样点均去除，仅供参考。\n什么是 RasterLayer？ 关于 RasterLayer 的定义，在 Spatial Data Science (Feed the Future n.d.) 中有很好的解释。\n A RasterLayer object represents single-layer (variable) raster data. A RasterLayer object always stores a number of fundamental parameters that describe it. These include the number of columns and rows, the spatial extent, and the Coordinate Reference System. In addition, a RasterLayer can store information about the file in which the raster cell values are stored (if there is such a file). A RasterLayer can also hold the raster cell values in memory.\n 在 R 中提及的 RasterLayer 通常指的是由 sp 包 (Pebesma et al. 2019) 提供的 RasterLayer 类，每一个 RasterLayer 代表一层 raster 栅格数据，其中记录了 raster 数据的基础信息，例如行、列、空间范围、参考系。而对 RasterLayer 进行操作最常用的工具是 raster 包 (Hijmans et al. 2020)。\n数据准备 所需加载包： 1. elevatr(Hollister and Shah 2018)；2. raster； 3.tidyverse (Wickham and RStudio 2019)\n具体到这一次的地图绘制中，我们需要两个 RasterLayer —— 1. 作为背景层的 bg_rst，以及 2.用作展示地形的 tp_rst。那么如何获得这两个 RasterLayer 呢？elevatr 包提供了专门用于获取高程栅格数据的方法 get_elev_raster.\n不过在获取高程数据之前，需要首先指定地图绘制矩形边界。之后方可使用 get_elev_raster 来获取边界范围内的高程数据，使用 z 参数 (zoom) 确定缩放程度。因为通过 get_elev_raster 获取高程 raster 的方法是获取服务器与自定义边界的最小公倍数（不准确的说法），所以需要对获取的原始 RasterLayer 再次剪切，以便得到地图绘制矩形边界内的数据。\nlibrary(elevatr) # Get rasterlay from AWS by `get_elev_raster` fucntion\rlibrary(raster) # Manipulate RasterLayer object\rlibrary(tidyverse) # Tidy is everything.\r# Set the extent we want to plot\rext_sample \u0026lt;- extent(70, 105, 25, 45)\r# Preparing for getting the elevation raster data, make a blank RasterLayer,\r# becasue the first parameter of get_elev_raster is a target Rasterlayer.\rbg_init \u0026lt;- raster(ext = ext_sample, resolution = 0.01)\r# Get elevation raster with zoom 5, then only keep the extend we want to plot\r# later.\rbg_rst \u0026lt;- get_elev_raster(bg_init, z = 5) %\u0026gt;% crop(ext_sample)\r bg_rst 就是地图背景中灰色的辅助部分的数据就准备好了。\n# Let's check the detail of bg_rst, the Background RasterLayer\rbg_rst\r ## class : RasterLayer ## dimensions : 1075, 1591, 1710325 (nrow, ncol, ncell)\r## resolution : 0.022, 0.0186 (x, y)\r## extent : 70.008, 105.01, 25.0029, 44.9979 (xmin, xmax, ymin, ymax)\r## crs : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 ## source : /private/var/folders/0s/pkk0623j6dgdq9yyg4d3qtq40000gn/T/RtmpUCKkKF/raster/r_tmp_2020-02-21_223346_8889_78742.grd ## names : layer ## values : -156.1392, 8006.811 (min, max)\r 随后我们需要下载青藏高原的多边形文件，这里我们选择张镱锂 (2002) 等人在《论青藏高原范围与面积》一文提供的青藏高原范围与界线地理信息系统数据。从《全球变化科学研究数据出版系统》下载即可。这里我选择了 DBATP.zip 下载，对应的文件格式为 Shaplefile，使用 rgdal 包 (Bivand et al. 2019) 提供的 readOGR 方法读取其中的 DBATP_Polygon.shp，保存的数据类型为tp_ext（类型为 SpatialPolygonsDataFrame）。之后将bg_rst 数据按照 tp_ext 形状进行处理，获得符合青藏高原范围的 RasterLayer tp_rst。\nlibrary(rgdal)\r# Read the SpatialPolygon File from DBATP_Polygon.shp\rtp_ext \u0026lt;- readOGR(\u0026quot;DBATP/DBATP_Polygon.shp\u0026quot;)\r ## OGR data source with driver: ESRI Shapefile ## Source: \u0026quot;/Users/chenhan/Documents/Develop Learn/R/plotMapByGGplot/DBATP/DBATP_Polygon.shp\u0026quot;, layer: \u0026quot;DBATP_Polygon\u0026quot;\r## with 1 features\r## It has 1 fields\r # Keep the shpae of the Tibetan Plateau\rtp_rst \u0026lt;- mask(bg_rst, tp_ext)\r 为了便于定位，我们还将在图片上绘制地标名称 city_ls，以及采样点位置及其类型 hbt_coord。\nPS.可以根据自己的实际情况确定数据的存储类型，这里因为个人项目的实际情况，数据并没有保存成为常见的 data.freame 或者 tibble 之类的类表格形式。注意绘图过程中前后对应即可。\n# Create the list of landmarks which we want to mark\rcity_ls \u0026lt;- list(x = c(91.1, 86.925278, 101.7781), y = c(29.65, 27.988056, 36.6169), label = c(\u0026quot;Lhasa\u0026quot;, \u0026quot;Qomolangma\u0026quot;, \u0026quot;Xi'Ning\u0026quot;))\rstr(city_ls)\r ## List of 3\r## $ x : num [1:3] 91.1 86.9 101.8\r## $ y : num [1:3] 29.6 28 36.6\r## $ label: chr [1:3] \u0026quot;Lhasa\u0026quot; \u0026quot;Qomolangma\u0026quot; \u0026quot;Xi'Ning\u0026quot;\r # Read point with latitude and longitude. This operation is not needed for\r# everyone, actually it depends on the actual data structure.\rhbt_coord \u0026lt;- read_rds(\u0026quot;hbt_coord.rds\u0026quot;) %\u0026gt;% mutate(Ecosystem = ifelse(hbt == \u0026quot;M\u0026quot;, \u0026quot;Alpine Meadow\u0026quot;, \u0026quot;Alpine Steppe\u0026quot;))\rstr(hbt_coord)\r ## Classes 'tbl_df', 'tbl' and 'data.frame': 432 obs. of 4 variables:\r## $ hbt : chr \u0026quot;M\u0026quot; \u0026quot;M\u0026quot; \u0026quot;M\u0026quot; \u0026quot;M\u0026quot; ...\r## $ lon : num 101 101 101 100 100 ...\r## $ lat : num 35.3 35 35 34.5 34.5 ...\r## $ Ecosystem: chr \u0026quot;Alpine Meadow\u0026quot; \u0026quot;Alpine Meadow\u0026quot; \u0026quot;Alpine Meadow\u0026quot; \u0026quot;Alpine Meadow\u0026quot; ...\r 注意，前面的操作中，我们裁剪 RasterLayer 用到了 crop 和 mask 两种操作，关于这两种操作的解释，我用一张图来解释：\n简而言之，两种操作都会得到更小的矩形图形，但是使用 mask 方法会在多边形区域外的矩形部分填充 NA 使被裁剪 RasterLayer 看起来成为多边形。\n地图绘制 所需加载包： scales (Wickham, Seidel, and RStudio 2019)\n不过在进行绘图之前，还需要对 RasterLayer 数据进行一些小的调整，以便与 ggplot2 的功能兼容。首先将两个 RasterLayer 转换为 data.frame 保留 xy，xy 为经纬度，应点上的值将会保留成与 RasterLayer 中 names 相同的列名，比如 bg_rst 转换为 data.frame 后列名就是 x, y, layer。之后我们将 layer（在此处为当前为止的海拔高度）转换数值范围，因为保留原始的数据用作后面的透明度会让整张图像灰蒙蒙。\n不过要注意的是，正如我们前面说到的 mask 后的 RasterLayer 会将区域外的数据标记为 NA，如果直接使用 NA 绘图将会出现各种奇怪的效果，因此我们选择将 NA 数据更换为 0，将区域内的数据更换为 1，将两种值用作图像的 alpha 就会绘制出准确的青藏高原样式。\n没看懂咋办？呆胶布！动手试试不进行 NA 转换的效果便知道了。\n# scales package provide rescale function which can convert the range of numbers\r# list to another range.\rlibrary(scales)\r ## ## Attaching package: 'scales'\r## The following object is masked from 'package:purrr':\r## ## discard\r## The following object is masked from 'package:readr':\r## ## col_factor\r # First convert RasterLayer as Data.Frame with xy coordinate system. Then\r# rescale the elevaion to alpha, as the background part, super high alpha value\r# is not a good idea, which range is the best? It depends by the actual. Save the\r# alpha value with colname 'alpha'\rbg_rst_df \u0026lt;- as.data.frame(bg_rst, xy = TRUE) %\u0026gt;% mutate(alpha = rescale(layer, to = c(0.25, 0.75)))\r# NA will be generated by the mask function, if use NA and evelation as the alpha\r# of Topographic figure, it will be dizzy, and for color Topographic figure\r# please don't use the greyscale and color for the evelation simultaneously. Just\r# use alpha to control the shape of regional shpae.\rtp_rst_df \u0026lt;- as.data.frame(tp_rst, xy = TRUE) %\u0026gt;% na.omit()\r 当数据准备完毕，我们就开始图形的绘制。首先进行地形图叠加到背景地形的绘制。因为命令较多，并且均以注释的形式标注到代码中，故此不再提前讲解。\n# sacle_parm as a parameter controls the sclae of the hole figure, it will be\r# used to control the size of text, point, legend, etc. to fit the size of\r# figure.\rscale_parm \u0026lt;- 2\r# Init ggplot\r# plot the backgroun layer, set the alpha without color will make a grey\r# background\rgmap \u0026lt;- ggplot() + # plot the topographic layer, set alpha to keep the shape of Tibetan Plateau\r# (TP). Color indicates the elevation.\rgeom_raster(data = bg_rst_df, aes(x = x, y = y, alpha = alpha)) + # terrain.colors is an built-in function to generate a list of color palettes.\r# set the legend title of evelation by name parameter.\rgeom_raster(data = tp_rst_df, aes(x = x, y = y, fill = layer, alpha = alpha)) +\r# As we said before, the alphas is used to determine the shpae of TP, we don't\r# need to show them as legends.\rscale_fill_gradientn(colours = terrain.colors(100), name = \u0026quot;Elevation (m)\u0026quot;) +\r# Project this figure as a map but not a normal figure\rscale_alpha(guide = \u0026quot;none\u0026quot;) +\r# Set preset theme makes things easire\rcoord_quickmap() +\r# Set the limititions of axes. `expand` parameter will remove the gaps between\rtheme_minimal() +\r# Set the titles of axis\rscale_x_continuous(limits = c(70, 105), expand = c(0, 0)) + scale_y_continuous(limits = c(25, 45), expand = c(0, 0)) +\rlabs(x = \u0026quot;Longtitude (E)\u0026quot;, y = \u0026quot;Laitude (N)\u0026quot;) +\r# remove the background color and background grid, you know the classical\r# ggplot's grid, don't you?\rtheme(panel.grid = element_blank(), panel.background = element_blank()) + # Set the size of axis and legend\rtheme(axis.title = element_text(size = 7 * scale_parm), axis.text = element_text(size = 6 * scale_parm)) + theme(legend.key.width = unit(0.2 * scale_parm, \u0026quot;cm\u0026quot;), legend.key.height = unit(0.5 * scale_parm, \u0026quot;cm\u0026quot;), legend.text = element_text(size = 5 * scale_parm), legend.title = element_text(size = 6 * scale_parm))\r# Preview will slow down the process of operations, I highly recommand do not\r# preveiw the ggplot and save it as a file directly.\r 上述操作完毕，如果没有意外，就可以获得一张效果尚可的底图了。但是，个人强烈建议不进行预览图像，直接进行后续的操作，因为绘制当前精度的底图需要花费较长的时间。或者可以使用 ggsave 方法输出为文件进行预览，这样如果效果满意，可以直接用作成品，避免预览后再次绘制效率较低。\n随后我们再将地标为止添加到底图上。\ngmap \u0026lt;- gmap +\r# Add the city_ls to the main plot as landmarks.\rgeom_text(\rmapping = aes(x = x, y = y, label = label),\r# geom_text don't support the structure we used. # convert the list into data.frame, every element is used as column here.\rdata = bind_cols(city_ls),\rsize = 2 * scale_parm\r)\r 最后将采样点添加到底图上。注意 ⚠️ 由于版权和数据分享的原因，我将采样点的坐标设置为 0，0，故此图片上不会显示任何采样点，请根据实际情况设置！\ngmap \u0026lt;- gmap +\r# Add the sample sites to the main plot as points.\r# Due to the copyright of my scholar article and data share policy, I won't point my sample sites to the picuture, the coordinations of point is 0,0 here.\rgeom_point(\rmapping = aes(\r# x = lon,\rx = 0,\ry = 0,\r# y = lat,\rcol = Ecosystem,\rshape = Ecosystem\r),\rdata = hbt_coord,\r# Don't set the size as 0 until you don't want to see anything here.\r# Don't set the size as 0 until you don't want to see anything here.\r# Don't set the size as 0 until you don't want to see anything here.\rsize = 0 * scale_parm\r) +\r# Convert the color as legend class, becasuse the shape legend is legend class.\r# If there is no class conversion, the shape and color will be showed as two legends.\r# Then select colour as guides and site a larger size to make it more readable.\r# Don't know what's these means? Commit below code will show you everything.\rscale_color_discrete(guide = \u0026quot;legend\u0026quot;) +\rguides(colour = guide_legend(override.aes = list(size = .8 * scale_parm)))\r 如果对输出结果满意，那么可以跳过下面这一步，直接进行 ggsave 操作保存图像。不过在这里，保存图像之前，我们还需要修改图片的空白区域 margins 来让图像更合适一些。\ngmap \u0026lt;- gmap +\rtheme(plot.margin =\r# Set marigns of figure, the order of parameters is top, right, bottom, left\runit(\rc(0 * scale_parm, 0 * scale_parm, -.2 * scale_parm, .2 * scale_parm),\r\u0026quot;cm\u0026quot;\r))\r 最后导出图像即可。ggsvae 提供了丰富的参数定义输出的图像。对于需要投稿 SCI 的文章，通常 Author Guidelines 要求提供不低于 300 DPI 的图片文件。如果允许，保存为 PDF 文件会是不错的方法，毕竟通用性和文件大小都能得到很好的满足。\nggsave(filename = \u0026quot;gmap.pdf\u0026quot;, plot = gmap, width = 9 * scale_parm, height = 6.2 * scale_parm, units = \u0026quot;cm\u0026quot;, dpi = 600)\r ## Warning: Removed 432 rows containing missing values (geom_point).\r 最后，如果有任何更好的意见和建议，换用通过任何形式与我交流。祝大家都能制作出令自己（主要是杂志）满意的作品。\n参考文献 Bivand, Roger, Tim Keitt, Barry Rowlingson, Edzer Pebesma, Michael Sumner, Robert Hijmans, Even Rouault, Frank Warmerdam, Jeroen Ooms, and Colin Rundel. 2019. “Rgdal: Bindings for the ’Geospatial’ Data Abstraction Library.” https://CRAN.R-project.org/package=rgdal.\n\rFeed the Future. n.d. “Raster Data — R Spatial.” Blog. Spatial Data Science. Accessed February 19, 2020. https://rspatial.org/raster/spatial/4-rasterdata.html.\n\rHijmans, Robert J., Jacob van Etten, Michael Sumner, Joe Cheng, Andrew Bevan, Roger Bivand, Lorenzo Busetto, et al. 2020. “Raster: Geographic Data Analysis and Modeling.” https://CRAN.R-project.org/package=raster.\n\rHollister, Jeffrey, and Tarak Shah. 2018. “Elevatr: Access Elevation Data from Various APIs.” https://github.com/jhollist/elevatr.\n\rPebesma, Edzer, Roger Bivand, Barry Rowlingson, Virgilio Gomez-Rubio, Robert Hijmans, Michael Sumner, Don MacQueen, Jim Lemon, Josh O’Brien, and Joseph O’Rourke. 2019. “Sp: Classes and Methods for Spatial Data.” https://CRAN.R-project.org/package=sp.\n\rWickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen, Kohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, and RStudio. 1. “Ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics.” https://CRAN.R-project.org/package=ggplot2.\n\rWickham, Hadley, and RStudio. 2019. “Tidyverse: Easily Install and Load the ’Tidyverse’.” https://CRAN.R-project.org/package=tidyverse.\n\rWickham, Hadley, Dana Seidel, and RStudio. 2019. “Scales: Scale Functions for Visualization.” https://CRAN.R-project.org/package=scales.\n\r张镱锂, 李炳元, and 郑度. 2002. “论青藏高原范围与面积.” 地理学报 21 (1): 1–8. https://doi.org/10.11821/yj2002010001.\n\r","date":"2020-02-19","permalink":"/post/%E4%BD%BF%E7%94%A8-ggplot2-%E7%BB%98%E5%88%B6-rasterlayer-%E5%9C%B0%E5%9B%BE/","tags":["R","ggplot2","ecology"],"title":"R for Everything: 使用 ggplot2 绘制 RasterLayer 地图"}]